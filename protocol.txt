Line oriented. Each line sent to server is a separate command, each line
returned represents a separate object in the reply. Results from commands
are prefixed with "R". Replies are terminated with "OK" (without "R") or a
line beginning with "E" for errors.

All text is in UTF-8.
All unsigned numbers are in hex with lower case letters.
All signed numbers are in decimal.
MD5:s are unsigned numbers, zero-padded to be fixed width.
GUID:s are not numbers.

Each line consists of one initial letter for the command, followed by one or
more space separated arguments.

Commands:
S - search
T - tag a post
A - add a new object
M - modify an existing object
R - relationship management
I - implication management
N - nop (to keep server from closing idle connection)
a - authenticate
Q - quit

S:
First char of first argument determines if search is for a post ("P") or a
tag ("T").
	P:
	Arguments:
		T: Set tag
		t: Not set tag
		O: Ordering of results
		F: Flag (request some data to be returned)
		M: Find specific post.
	T and t:
		Specify tag by name ("N") or guid ("G").
		Prefix tag-spec with "~" to find only weak tags, or "!" to
		find only strong tags.
	O:
		Currently "date" or "score". Prefix with - to reverse sort.
	F:
		Available flags:
			tagname: Return name of set tags.
			tagguid: Return guid of set tags.
			ext: Return file-type in the form of a likely
				extension. Currently one of "jpeg", "gif",
				"png", "bmp" or "swf".
			created: Time as a unix timestamp (UTC). (unsigned)
			width: Width in pixels. (unsigned)
			height: Height in pixels. (unsigned)
			score: signed integer.
			source: Encoded string.
	M:
		md5 of post. Can not be specified together with "T" or "t".
		Can only be specified once.
	Returned posts are ordered according to O arguments, or not at all.
	Returned data for each post in not ordered, except that the Nth
	tagname is for the same tag as the Nth tagguid.
	Example:
		SPTNfoo t~G29kQAF-qto48a-aaaaaa-aaaaaf O-date Fext
	Example reply:
		RGyBYR8f-qto48a-aaaaaa-aaaaa0 P0123456789abcdef0123456789abcdef Tfoo T~bar G~foYYLK-qto48a-aaaaaa-aaaa79 Fext=jpeg

	T:
	First either 'E'xact or 'F'uzzy, optionally 'A' to include aliases, 
	and then one of G, N or P:
		G: 'G'UID (only with E)
		N: Complete 'N'ame
		P: 'P'artial name
	Returns "Gguid Nname Ttype Ppost_count Wweak_post_count".
	Example:
		STEANnekomimi

T:
Arguments:
	P: md5 of post
	T: guid of a tag to add
	t: guid of a tag to remove
Exactly one P must be specified as the first argument, any number of "T" and
"t" may be specified.  Replies only "OK". On error, acceptable arguments
preceding the erronious one are applied. GUIDs may be prefixed with "~" to
apply the tag weakly.
Example:
	TP0123456789abcdef0123456789abcdef T29kQAF-qto48a-aaaaaa-aaaaaf

A:
First char is what type of object to add.
	T: a tag
		G: guid (this is normally generated by the server, leave it out)
		N: name
		T: tag-type. enum as specified in config.
	A: an alias
		G: guid (of the real tag)
		N: name (of the alias)
	P: a post
		First specify the md5 (immediately following 'P'), then specify
		field=value pairs:
		width: uint
		height: uint
		created: uint, unix timestamp (UTC)
		score: signed int
		filetype: enum {"jpeg", "gif", "png", "bmp", "swf"}
		rating: enum as specified in config
		source: Encoded string
		title: Encoded string
	U: a user
		N: name (encoded)
		P: password (encoded)
		C: Capability to set.
		c: Capability to unset.
		Capabilies are {"post", "delete", "mkuser", "tag", "untag", "modcap", "mktag"}

M:
Like A. Only works for P and U for now.

R:
	First char determines action.
	R/r:
		Takes an md5 followed by a list of md5:s. All posts in the
		list will be added (or removed for "r") as related to the
		initial md5 (but not each other).
	S:
		Show relationships for posts. Returnes lines of the form
		"Rmd5 md5 [md5 [...]]". The first md5 on each line is
		related to all following.
		Can return several lines for the same post.
	Relationships are symmetric, "RRa b" and "RRb a" are equivalent.
	Example:
		RRba6a8fcac2481bc7bf07e493c17eccaa aa019c7b4f4c81cdd89833f41e6064a5

I:
	Takes a tag GUID followed by one or more of:
	I/i:
		Implies (or no longer implies for "i") this tag.
		Optionally followed by :priority (int, default 0).
	S:
		Show implications from this tag. Example reply:
			RIg2tKGC-By0kHy-aaaaaa-aaaaas:10 Ig2tKGC-By0kHt-aaaaaa-aaaaar:0
	Example:
		Ig2tKGC-By0kHB-aaaaaa-aaaaay Ig2tKGC-By0kHy-aaaaaa-aaaaas:10

N:
Replies "OK".

Q:
Replies "Q *", closes connection.

a:
"aUSERNAME PASSWORD". This should be fixed of course.. Replies "OK" or "E".

Encoded strings are base64 with "_-" as the last two chars. All strings are
always a multiple of 3 characters long, padded with NULs (0, 1 or 2) as
appropriate.
