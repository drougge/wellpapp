Line oriented. Each line sent to server is a separate command, each line
returned represents a separate object in the reply. Results from commands
are prefixed with "R". Replies are terminated with "OK" (without "R") or a
line beginning with "E" for errors.

All text is in UTF-8.
All unsigned numbers are in hex with lower case letters.
All signed numbers are in decimal.
MD5:s are unsigned numbers, zero-padded to be fixed width.
GUID:s are not numbers.

Each line consists of one initial letter for the command, followed by one or
more space separated arguments.

Commands:
S - search
T - tag a post
A - add a new object
M - modify an existing object
D - delete an existing object
R - relationship management
I - implication management
O - order management
L - lists of meta information
N - nop (to keep server from closing idle connection)
t - transactions
Q - quit

S:
First char of first argument determines if search is for a post ("P") or a
tag ("T").
	P:
	Arguments:
		T: Set tag
		t: Not set tag
		O: Ordering of results
		F: Flag (request some data to be returned)
		M: Find specific post.
		R: Range of results to return.
	T and t:
		Specify tag by name ("N") or guid ("G").
		Prefix tag-spec with "~" to find only weak tags, or "!" to
		find only strong tags.
		Guids of tags with a value tag may also be suffixed with a
		value specification as follows:
			=value[+-inexactness]
			>value
			>=value
			<value
			<=value
		Strings can be matched with = or with =~ to match a regexp.
		Strings (including regexpes) are always encoded.
	O:
		What to sort by. Prefix with - to reverse sort.
		Possible values:
			created (the date this post was created in wellpapp)
			imgdate (the date of the image, probably read from exif)
			modified (when the post was last modified)
			score (user set integer)
			width, height, area (dimensions of image)
			tagcount (number of set tags)
			group
		Group sorting is special, it sorts by the group ordering of
		the first tag in the search, and can not be reversed.
	F:
		Available flags:
			tagname: Return name of set tags.
			tagguid: Return guid of set tags.
			tagdata: Return other data for set tags.
			ext: Return file-type in the form of a likely
				extension. Currently one of "jpeg", "gif",
				"png", "bmp", "dng", "pef", "nef" or "swf".
			created: Time as a unix timestamp (UTC). (unsigned)
			imgdate: Time as a unix timestamp (UTC). (unsigned)
			modified: Time as a unix timestamp (UTC). (unsigned)
			width: Width in pixels. (unsigned)
			height: Height in pixels. (unsigned)
			score: signed integer.
			source: Encoded string.
			implied: Separate implied tags from actually set ones.
				Implied tags are always returned, but if you
				request this you get I in the flags for implied
				ones.
	M:
		md5 of post. Can not be specified together with "T" or "t".
		Can only be specified once.
	R:
		first:last result you want to see. You can leave out either
		(or both) ends. If you specify R, the reply will start with
		RRcount (where count is the number of results).
		First, last and count are unsigned numbers.
	Returned posts are ordered according to O arguments, or not at all.
	Returned data for each post in not ordered, except tags come last.
	Each tag is introduced by a colon immediately followed by flags for
	this tag, I for implied, D for datatag, and ~ for weak, and then the
	same format as returned from tag searches (with the data you requested
	only). If the tag has a value, this is returned as Vtype=value (instead
	of just Vtype in tag searches).
	Example:
		SPTNfoo t~G29kQAF-qto48a-aaaaaa-aaaaaf O-date Fext Ftagname Ftagguid
	Example reply:
		RP0123456789abcdef0123456789abcdef Fext=jpeg : GyBYR8f-qto48a-aaaaaa-aaaaa0 Nfoo :~ Nbar GfoYYLK-qto48a-aaaaaa-aaaa79 :

	T:
	First either 'E'xact or 'F'uzzy, optionally 'A' to include aliases,
	and then one of G, N or P:
		G: 'G'UID (only with E)
		N: Complete 'N'ame
		P: 'P'artial name
		I: 'I'nitial part of name
	Optional arguments:
		O: ordering, with the possible values:
			post: Number of posts
			weak: Number of weak posts
			allpost: Sum of the above
		R: Range, works just like R on post searches.
	Order can be prefixed with - to reverse sorting ("O-weak")
	Returns "Gguid Nname Ttype Ppost_count Wweak_post_count [Fflag [..]]".
	Flags can be unsettable, datatag and ordered. Not included = not set.
	If you search for aliases there may also any number of Aalias in there.
	Tags with a value type will also include Vtype.
	Can be suffixed by ":post search", which limits search to tags and tag
	counts in the result of that post search. (Not terribly efficient.)
	Examples:
		STEAIneko Oallpost R:3
		STEP R:8 :TNfoo TNbar

T:
Arguments:
	P: md5 of post
	T: guid of a tag to add
	t: guid of a tag to remove
Exactly one P must be specified as the first argument, any number of "T" and
"t" may be specified.  Replies only "OK". On error, acceptable arguments
preceding the erronious one are applied. GUIDs may be prefixed with "~" to
apply the tag weakly.
When setting a tag with a value type, the value can be specified with =value
after the guid. Setting the tag without =value will clear any set value. Values
that can have inexactness may specify that with +-value after the value.
Examples:
	TP0123456789abcdef0123456789abcdef T29kQAF-qto48a-aaaaaa-aaaaaf
	TP0123456789abcdef0123456789abcdef T29kQAF-qto48a-aaaaaa-aaaaaf=6.7
	TP0123456789abcdef0123456789abcdef T29kQAF-qto48a-aaaaaa-aaaaaf=6.7+-0.5

A:
First char is what type of object to add.
	T: a tag
		G: guid (this is normally generated by the server, leave it out)
		N: name
		T: tag-type. enum as specified in config.
		F: flags. Currently only "unsettable".
			Can be specified as F-unsettable to clear it in MT.
			An unsettable tag can still be implied, but not directly
			set. (Already set stays, can be unset.)
			It is possible to merge a tag into an unsettable tag.
		V: Value type, one of
			none: Same as not specified, tag can not have a value.
			string, int, uint, float, datetime: the obvious
			f-stop: float, but with different inexactness scale.
			stop: float, but with different inexactness scale.
			Stop works for both ISO and shutter times.
			A value (other than string) is specified as the actual
			value, and an optional inexactness, with the natural
			scaling for the value type. (So f-stop 5.6+-1 is 4 to
			8, stop 100+-2 is 25 to 400.)
			Note that inexactness for integers is unsigned, and as
			such is specified in hex. (Just like uint values.)
			float values (including stops) may be specified as n/d
			They are returned as they were set, but comparisons
			(with or without fuzz) are done as double.
			Datetimes are in the format YYYY-MM-DDTHH:MM:SSZ.
			You can leave off as much as you like to the right, for
			automatic fuzz. Time zone (Z) can be either a literal Z
			(UTC) or a direction and HHMM. Fuzz can be specified
			with a suffix from YmdHMS, with S being the default.
			Examples:
			2012-08-25T20:54:33+0200
			2011-07-02T12:00:00Z+-1/2Y
			2011Z
			The last two are almost equivalent, but the first has a
			slightly larger fuzz that also covers leap years, the
			last one only gets this when it actually is a leap
			year.
	A: an alias
		G: guid (of the real tag)
		N: name (of the alias)
	P: a post
		First specify the md5 (immediately following 'P'), then specify
		field=value pairs:
		width: uint
		height: uint
		created: uint, unix timestamp (UTC)
		imgdate: uint, unix timestamp (UTC)
		score: signed int
		ext: enum {"jpeg", "gif", "png", "bmp", "dng", "pef", "nef", "swf"}
		rating: enum as specified in config
		rotate: signed int, image should be rotatede this many degrees
			Clients will probably only handle 0, 90, 180 and 270.
		source: Encoded string
		title: Encoded string

M:
Like A. Only works for P and T for now, and not everything can be changed.
For T, there is additionally M, to merge it with another tag. Currently refuses
if there is any conflict, that is if both tags are set but at different
strengths. Also refuses if anything implies the origin tag.
Example:
	MTGfSaP69-3QS9Hg-aaaaaa-aaaaa0 MfSaP69-3QS9Ka-aaaaaa-aaafkr
causes only ..aa0 to remain, ..fkr is deleted.
All names for ..fkr are recreated as aliases for ..aa0.

D:
First char is what type of object to delete.
	A: an alias
		N: name
	T: a tag
		G: guid
		You can't delete a tag that is referenced from another object.
	P: a post
		md5 directly after P.
		You can't delete a post that is referenced from another object
		(tags or related posts).

R:
	First char determines action.
	R/r:
		Takes an md5 followed by a list of md5:s. All posts in the
		list will be added (or removed for "r") as related to the
		initial md5 (but not each other).
	S:
		Show relationships for posts. Returnes lines of the form
		"Rmd5 md5 [md5 [...]]". The first md5 on each line is
		related to all following.
		Can return several lines for the same post.
	Relationships are symmetric, "RRa b" and "RRb a" are equivalent.
	Example:
		RRba6a8fcac2481bc7bf07e493c17eccaa aa019c7b4f4c81cdd89833f41e6064a5

I:
	First char determines action.
	I/i: (Add or remove implication.)
		Takes a tag GUID followed by one or more "Iguid:prio" or
		"iguid:prio". "I" means it implies the tag, "i" means it
		implies that this tag is not implied. (The higher priority
		implication wins.)
		:prio can be left off (for 0), and should be when removing.
	S:
		Show implications from this tag. Returnes lines of the
		form "RIid Iid:prio [Iid:prio [...]]". The first id on the
		line imples all following (or not for lower case "i"),
		with the specified priority.
		Can return several lines for the same tag.
		Example reply:
			RIg2tKGC-By0kHB-aaaaaa-aaaaay ig2tKGC-By0kHy-aaaaaa-aaaaas:10
	R:
		Show what implies a tag. Returns lines like S, with only one
		implication per line. (The second tag is always the one you
		specified after R.)
	Example:
		Ig2tKGC-By0kHB-aaaaaa-aaaaay Ig2tKGC-By0kHy-aaaaaa-aaaaas:10

O:
	First specify Gguid for the tag to order posts for.
	Then specify a list of Pmd5 for the posts to order.
	If a single post is specified, this post is ordered first.
	If more than one post is specified, the first post will not be moved,
	and the following posts will be placed immediately after it (in the
	order specified).
	The order of posts that have not been ordered is unspecified.
	It is not possible to order the posts on a tag that has weak or
	implied posts.

L:
	Returns a list of some meta property. Currently this can be tagtypes
	or ratings. Return RNname (one per line).
	Example:
		Ltagtypes

N:
Replies "OK".

Q:
Replies "Q *", closes connection.

t:
	Transactions are not ACID transactions, they are merely a way to get
	"OK" before the log is committed to disk. There is no facility to undo
	a transaction. (Other than editing the log of course.)
	Everything in the same transaction is considered to happen at the same
	time, and if the server is stopped with a transaction still in progress
	everything from it will be discarded on restart. So keep them short.
	"tB" begins a transaction, "tE" ends it. Both reply "OK" (or "E" if one
	is already/not in progress).

Encoded strings are base64 with "_-" as the last two chars. All strings are
always a multiple of 3 characters long, padded with NULs (0, 1 or 2) as
appropriate.
